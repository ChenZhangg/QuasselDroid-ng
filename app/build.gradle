/*
 * QuasselDroid - Quassel client for Android
 * Copyright (C) 2016 Janne Koschinski
 * Copyright (C) 2016 Ken BÃ¸rge Viktil
 * Copyright (C) 2016 Magnus Fjell
 * Copyright (C) 2016 Martin Sandsmark <martin.sandsmark@kde.org>
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

dependencies {
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

if (project.hasProperty("storeFile")) {
  android {
    signingConfigs {
      release {
        storeFile file(project.property("storeFile"))
        storePassword project.property("storePassword")
        keyAlias project.property("keyAlias")
        keyPassword project.property("keyPassword")
      }
    }
    
    buildTypes {
      release {
        signingConfig signingConfigs.release
      }
    }
  }
}

def versionPropsFile = file('version.properties')
def versionBuild = 0
if (versionPropsFile.exists() && versionPropsFile.canRead()) {
  def Properties versionProps = new Properties()

  versionProps.load(new FileInputStream(versionPropsFile))
  def runTasks = gradle.startParameter.taskNames
  versionBuild = Integer.valueOf(versionProps['VERSION_BUILD'].toString())
  if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
    versionBuild = versionBuild + 1
  }
  versionProps['VERSION_BUILD'] = versionBuild.toString()
  versionProps.store(versionPropsFile.newWriter(), null)
} else {
  // Get jenkins build number from environment
  versionBuild = Integer.valueOf(System.getenv("BUILD_NUMBER"))
}


def rawVersionName = "0.2.0"

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"
    
    defaultConfig {
        applicationId "com.iskrembilen.quasseldroid"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode versionBuild
        versionName rawVersionName + " Build #" + versionBuild
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    lintOptions {
        abortOnError false
    }
}

def runTasks = gradle.startParameter.taskNames
if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
    android {
        buildTypes {
            release {
                //minifyEnabled true
                //shrinkResources true
                //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

                applicationVariants.all { variant ->
                    variant.outputs.each { output ->
                        def fileName = output.outputFile.name
                                .replace(".apk", String.format("-%s-build%d.apk", rawVersionName, versionBuild))
                                .replace("app-", "QuasselDroidNG-")
                        output.outputFile = new File(output.outputFile.parent, fileName)
                    }
                }
            }
        }
    }
}


dependencies {
    testCompile 'junit:junit:4.12'

    // General Java libs
    compile 'com.google.guava:guava:19.0'
    compile 'de.greenrobot:eventbus:2.4.0'

    compile 'joda-time:joda-time:2.9.1'
    compile 'org.joda:joda-convert:1.8'

    // UI Libs
    compile 'com.bignerdranch.android:expandablerecyclerview:2.0.4'
    compile(name:'library-release', ext:'aar')
    // This dependency can be removed as soon as the requires ressources are copied over.
    compile('com.mikepenz:materialdrawer:5.0.3@aar') { transitive = true }
    compile('com.github.afollestad.material-dialogs:core:0.8.5.3@aar') { transitive = true }
    compile('com.github.afollestad.material-dialogs:commons:0.8.5.3@aar') { transitive = true }

    // ORM
    apt "com.github.Raizlabs.DBFlow:dbflow-processor:3.1.1"
    compile "com.github.Raizlabs.DBFlow:dbflow-core:3.1.1"
    compile "com.github.Raizlabs.DBFlow:dbflow:3.1.1"


    // Appcompat
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile 'com.android.support:design:24.0.0'
    compile 'com.android.support:support-v4:24.0.0'
    compile 'com.android.support:recyclerview-v7:24.0.0'
    compile 'com.android.support:preference-v14:24.0.0'
    compile 'com.android.support:cardview-v7:24.0.0'

    // Reactive Libs
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-support-v4:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-design:0.4.0'
    compile 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.4.0'

    // Crashreports
    compile 'ch.acra:acra:4.9.0'

    // UI autobinding
    compile 'com.jakewharton:butterknife:7.0.1'
}
